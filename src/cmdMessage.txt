====================LustreNode类信息==========================
NodeName: : [Counter]
NodeInput: : [init1 : int;  init2 : int; ]
NodeOutput: [count1 : int; count2 : int; ]
NodeVars: [x : int; y : int; t : int; count1_0 : int; count1_1 : int; ]
NodeBodys: [init1 = x + 1;; init2 = y + 1;; count1_0 = init1 -> pre count1 + 1;; count1_1 = count1_0 + x;; count2 = t + 2;; count1 = count1_1;; ]
NodeStates:
From [init1] to [x + 1]
From [init2] to [y + 1]
From [count1_0] to [init1 -> pre count1 + 1]
From [count1_1] to [count1_0 + x]
From [count2] to [t + 2]
From [count1] to [count1_1]
====================VarStateList类信息==========================

[count1]'s state:
1.VarName is: [count1], VarType is: [int]
2.[count1]'s Pre:
{count1_1}
3.[count1]'s Guard:
4.[count1]'s Translate:
5.[count1]'s Post:

[count1_0]'s state:
1.VarName is: [count1_0], VarType is: [int]
2.[count1_0]'s Pre:
3.[count1_0]'s Guard:
4.[count1_0]'s Translate:
{init1 -> pre count1 + 1}
5.[count1_0]'s Post:

[count1_1]'s state:
1.VarName is: [count1_1], VarType is: [int]
2.[count1_1]'s Pre:
{count1_0 + x}
3.[count1_1]'s Guard:
4.[count1_1]'s Translate:
5.[count1_1]'s Post:

[count2]'s state:
1.VarName is: [count2], VarType is: [int]
2.[count2]'s Pre:
{t + 2}
3.[count2]'s Guard:
4.[count2]'s Translate:
5.[count2]'s Post:

[init1]'s state:
1.VarName is: [init1], VarType is: [int]
2.[init1]'s Pre:
{x + 1}
3.[init1]'s Guard:
4.[init1]'s Translate:
5.[init1]'s Post:

[init2]'s state:
1.VarName is: [init2], VarType is: [int]
2.[init2]'s Pre:
{y + 1}
3.[init2]'s Guard:
4.[init2]'s Translate:
5.[init2]'s Post:

[t]'s state:
1.VarName is: [t], VarType is: [int]
2.[t]'s Pre:
3.[t]'s Guard:
4.[t]'s Translate:
5.[t]'s Post:

[x]'s state:
1.VarName is: [x], VarType is: [int]
2.[x]'s Pre:
3.[x]'s Guard:
4.[x]'s Translate:
5.[x]'s Post:

[y]'s state:
1.VarName is: [y], VarType is: [int]
2.[y]'s Pre:
3.[y]'s Guard:
4.[y]'s Translate:
5.[y]'s Post:
