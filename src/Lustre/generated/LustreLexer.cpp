
// Generated from ./Lustre.g4 by ANTLR 4.13.1


#include "LustreLexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct LustreLexerStaticData final {
  LustreLexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  LustreLexerStaticData(const LustreLexerStaticData&) = delete;
  LustreLexerStaticData(LustreLexerStaticData&&) = delete;
  LustreLexerStaticData& operator=(const LustreLexerStaticData&) = delete;
  LustreLexerStaticData& operator=(LustreLexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag lustrelexerLexerOnceFlag;
#if ANTLR4_USE_THREAD_LOCAL_CACHE
static thread_local
#endif
LustreLexerStaticData *lustrelexerLexerStaticData = nullptr;

void lustrelexerLexerInitialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  if (lustrelexerLexerStaticData != nullptr) {
    return;
  }
#else
  assert(lustrelexerLexerStaticData == nullptr);
#endif
  auto staticData = std::make_unique<LustreLexerStaticData>(
    std::vector<std::string>{
      "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
      "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
      "T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
      "T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
      "T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
      "T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", 
      "T__65", "T__66", "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
      "T__73", "T__74", "T__75", "T__76", "T__77", "T__78", "T__79", "T__80", 
      "T__81", "T__82", "T__83", "T__84", "T__85", "T__86", "T__87", "T__88", 
      "T__89", "T__90", "T__91", "T__92", "T__93", "T__94", "T__95", "T__96", 
      "T__97", "T__98", "T__99", "T__100", "T__101", "T__102", "T__103", 
      "T__104", "T__105", "T__106", "T__107", "T__108", "T__109", "T__110", 
      "T__111", "T__112", "T__113", "T__114", "T__115", "T__116", "T__117", 
      "T__118", "T__119", "T__120", "T__121", "T__122", "T__123", "T__124", 
      "T__125", "T__126", "T__127", "INITIAL", "FINAL", "UNLESS", "UNTIL", 
      "BOOL", "INTEGER", "UINT", "REAL", "CHAR", "FLOAT", "USHORT", "SHORT", 
      "ID", "SL_COMMENT", "ML_COMMENT", "PRAGMA", "STRING", "MAIN", "PROPERTY", 
      "CHECK", "WS", "ERROR"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "'include'", "';'", "'package'", "'body'", "'end'", "'uses'", 
      "','", "'='", "'is'", "'provides'", "'model'", "'needs'", "'returns'", 
      "'type'", "'enum'", "'{'", "'}'", "'int'", "'bool'", "'char'", "'short'", 
      "'ushort'", "'uint'", "'float'", "'real'", "'struct'", "'^'", "':'", 
      "'const'", "'('", "')'", "'['", "']'", "'when'", "'not'", "'last'", 
      "'function'", "'node'", "'let'", "'tel'", "'(*@contract'", "'*)'", 
      "'/*@contract'", "'*/'", "'var'", "'fi'", "'contract'", "'mode'", 
      "'require'", "'ensure'", "'assume'", "'guarantee'", "'import'", "'if'", 
      "'then'", "'elsif'", "'else'", "'frame'", "'imported'", "'..'", "'automaton'", 
      "'state'", "'resume'", "'restart'", "'''", "'activate'", "'every'", 
      "'pre'", "'->'", "'fby'", "'merge'", "'#'", "'.'", "'default'", "'with'", 
      "'case'", "'of'", "'|'", "'-'", "'_'", "'map'", "'<<'", "'>>'", "'fold'", 
      "'mapi'", "'foldi'", "'mapfold'", "'mapw'", "'mapwi'", "'foldw'", 
      "'foldwi'", "'make'", "'flatten'", "'+$'", "'-$'", "'not$'", "'short$'", 
      "'int$'", "'float$'", "'real$'", "'$+$'", "'$-$'", "'$*$'", "'$/$'", 
      "'$mod$'", "'$div$'", "'$=$'", "'$<>$'", "'$<$'", "'$>$'", "'$<=$'", 
      "'$>=$'", "'$and$'", "'$or$'", "'$xor$'", "'+'", "'*'", "'/'", "'mod'", 
      "'div'", "'<>'", "'<'", "'>'", "'<='", "'>='", "'and'", "'or'", "'xor'", 
      "'initial'", "'final'", "'unless'", "'until'", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "'--%MAIN'"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "INITIAL", "FINAL", "UNLESS", 
      "UNTIL", "BOOL", "INTEGER", "UINT", "REAL", "CHAR", "FLOAT", "USHORT", 
      "SHORT", "ID", "SL_COMMENT", "ML_COMMENT", "PRAGMA", "STRING", "MAIN", 
      "PROPERTY", "CHECK", "WS", "ERROR"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,150,1118,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,
  	7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,
  	14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,
  	21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,
  	28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
  	35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
  	42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
  	49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
  	56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
  	63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,
  	70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
  	77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,
  	84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
  	91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,
  	98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,
  	7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,
  	7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,
  	7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,
  	7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,
  	7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,
  	7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,
  	7,140,2,141,7,141,2,142,7,142,2,143,7,143,2,144,7,144,2,145,7,145,2,146,
  	7,146,2,147,7,147,2,148,7,148,2,149,7,149,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
  	1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,
  	4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,
  	1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
  	1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
  	1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,
  	1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,
  	1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,
  	1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
  	1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,28,1,28,
  	1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,33,1,33,
  	1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
  	1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,
  	1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
  	1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
  	1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,
  	1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,
  	1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,
  	1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
  	1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,54,
  	1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,
  	1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,
  	1,58,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
  	1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,
  	1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,65,1,65,1,65,1,65,1,65,
  	1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,
  	1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,71,
  	1,71,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,
  	1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,77,1,77,1,78,1,78,
  	1,79,1,79,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,82,1,82,1,82,1,83,1,83,
  	1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,
  	1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,87,1,87,1,88,
  	1,88,1,88,1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,1,89,1,90,1,90,1,90,
  	1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,
  	1,92,1,92,1,92,1,93,1,93,1,93,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,
  	1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,97,1,97,1,97,1,97,1,97,1,98,1,98,
  	1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,99,1,99,1,100,1,100,1,
  	100,1,100,1,101,1,101,1,101,1,101,1,102,1,102,1,102,1,102,1,103,1,103,
  	1,103,1,103,1,104,1,104,1,104,1,104,1,104,1,104,1,105,1,105,1,105,1,105,
  	1,105,1,105,1,106,1,106,1,106,1,106,1,107,1,107,1,107,1,107,1,107,1,108,
  	1,108,1,108,1,108,1,109,1,109,1,109,1,109,1,110,1,110,1,110,1,110,1,110,
  	1,111,1,111,1,111,1,111,1,111,1,112,1,112,1,112,1,112,1,112,1,112,1,113,
  	1,113,1,113,1,113,1,113,1,114,1,114,1,114,1,114,1,114,1,114,1,115,1,115,
  	1,116,1,116,1,117,1,117,1,118,1,118,1,118,1,118,1,119,1,119,1,119,1,119,
  	1,120,1,120,1,120,1,121,1,121,1,122,1,122,1,123,1,123,1,123,1,124,1,124,
  	1,124,1,125,1,125,1,125,1,125,1,126,1,126,1,126,1,127,1,127,1,127,1,127,
  	1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,129,1,129,1,129,1,129,
  	1,129,1,129,1,130,1,130,1,130,1,130,1,130,1,130,1,130,1,131,1,131,1,131,
  	1,131,1,131,1,131,1,132,1,132,1,132,1,132,1,132,1,132,1,132,1,132,1,132,
  	3,132,964,8,132,1,133,4,133,967,8,133,11,133,12,133,968,1,134,1,134,1,
  	134,1,135,1,135,1,135,1,135,1,136,1,136,1,136,1,136,1,137,4,137,983,8,
  	137,11,137,12,137,984,1,137,1,137,4,137,989,8,137,11,137,12,137,990,1,
  	137,1,137,1,138,1,138,1,138,1,138,1,139,1,139,1,139,1,140,1,140,5,140,
  	1004,8,140,10,140,12,140,1007,9,140,1,141,1,141,1,141,1,141,5,141,1013,
  	8,141,10,141,12,141,1016,9,141,1,141,1,141,1,142,1,142,1,142,1,142,1,
  	142,5,142,1025,8,142,10,142,12,142,1028,9,142,1,142,1,142,1,142,1,142,
  	1,142,1,142,5,142,1036,8,142,10,142,12,142,1039,9,142,1,142,1,142,3,142,
  	1043,8,142,1,142,1,142,1,143,1,143,5,143,1049,8,143,10,143,12,143,1052,
  	9,143,1,143,3,143,1055,8,143,1,143,1,143,3,143,1059,8,143,1,143,1,143,
  	1,144,1,144,5,144,1065,8,144,10,144,12,144,1068,9,144,1,144,1,144,1,145,
  	1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,146,1,146,1,146,1,146,1,146,
  	1,146,1,146,1,146,1,146,1,146,1,146,1,146,1,146,5,146,1093,8,146,10,146,
  	12,146,1096,9,146,1,147,1,147,1,147,1,147,1,147,1,147,1,147,5,147,1105,
  	8,147,10,147,12,147,1108,9,147,1,148,4,148,1111,8,148,11,148,12,148,1112,
  	1,148,1,148,1,149,1,149,3,1026,1037,1050,0,150,1,1,3,2,5,3,7,4,9,5,11,
  	6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
  	37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
  	30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
  	83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
  	53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,
  	63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,
  	73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,
  	83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,
  	93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,201,101,203,102,
  	205,103,207,104,209,105,211,106,213,107,215,108,217,109,219,110,221,111,
  	223,112,225,113,227,114,229,115,231,116,233,117,235,118,237,119,239,120,
  	241,121,243,122,245,123,247,124,249,125,251,126,253,127,255,128,257,129,
  	259,130,261,131,263,132,265,133,267,134,269,135,271,136,273,137,275,138,
  	277,139,279,140,281,141,283,142,285,143,287,144,289,145,291,146,293,147,
  	295,148,297,149,299,150,1,0,8,1,0,48,57,5,0,33,33,65,90,95,95,97,122,
  	126,126,6,0,33,33,48,57,65,90,95,95,97,122,126,126,3,0,10,10,13,13,37,
  	37,1,0,64,64,4,0,10,10,13,13,32,32,37,37,3,0,10,10,13,13,59,59,3,0,9,
  	10,12,13,32,32,1133,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
  	9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
  	0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
  	0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,
  	41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,
  	0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
  	0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,
  	73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,
  	0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
  	0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,
  	0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
  	0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,
  	0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,
  	0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,
  	0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,
  	0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,
  	0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,
  	0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,
  	0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,
  	0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,
  	0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,
  	0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,
  	0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,0,231,1,0,0,0,0,233,1,0,0,0,
  	0,235,1,0,0,0,0,237,1,0,0,0,0,239,1,0,0,0,0,241,1,0,0,0,0,243,1,0,0,0,
  	0,245,1,0,0,0,0,247,1,0,0,0,0,249,1,0,0,0,0,251,1,0,0,0,0,253,1,0,0,0,
  	0,255,1,0,0,0,0,257,1,0,0,0,0,259,1,0,0,0,0,261,1,0,0,0,0,263,1,0,0,0,
  	0,265,1,0,0,0,0,267,1,0,0,0,0,269,1,0,0,0,0,271,1,0,0,0,0,273,1,0,0,0,
  	0,275,1,0,0,0,0,277,1,0,0,0,0,279,1,0,0,0,0,281,1,0,0,0,0,283,1,0,0,0,
  	0,285,1,0,0,0,0,287,1,0,0,0,0,289,1,0,0,0,0,291,1,0,0,0,0,293,1,0,0,0,
  	0,295,1,0,0,0,0,297,1,0,0,0,0,299,1,0,0,0,1,301,1,0,0,0,3,309,1,0,0,0,
  	5,311,1,0,0,0,7,319,1,0,0,0,9,324,1,0,0,0,11,328,1,0,0,0,13,333,1,0,0,
  	0,15,335,1,0,0,0,17,337,1,0,0,0,19,340,1,0,0,0,21,349,1,0,0,0,23,355,
  	1,0,0,0,25,361,1,0,0,0,27,369,1,0,0,0,29,374,1,0,0,0,31,379,1,0,0,0,33,
  	381,1,0,0,0,35,383,1,0,0,0,37,387,1,0,0,0,39,392,1,0,0,0,41,397,1,0,0,
  	0,43,403,1,0,0,0,45,410,1,0,0,0,47,415,1,0,0,0,49,421,1,0,0,0,51,426,
  	1,0,0,0,53,433,1,0,0,0,55,435,1,0,0,0,57,437,1,0,0,0,59,443,1,0,0,0,61,
  	445,1,0,0,0,63,447,1,0,0,0,65,449,1,0,0,0,67,451,1,0,0,0,69,456,1,0,0,
  	0,71,460,1,0,0,0,73,465,1,0,0,0,75,474,1,0,0,0,77,479,1,0,0,0,79,483,
  	1,0,0,0,81,487,1,0,0,0,83,499,1,0,0,0,85,502,1,0,0,0,87,514,1,0,0,0,89,
  	517,1,0,0,0,91,521,1,0,0,0,93,524,1,0,0,0,95,533,1,0,0,0,97,538,1,0,0,
  	0,99,546,1,0,0,0,101,553,1,0,0,0,103,560,1,0,0,0,105,570,1,0,0,0,107,
  	577,1,0,0,0,109,580,1,0,0,0,111,585,1,0,0,0,113,591,1,0,0,0,115,596,1,
  	0,0,0,117,602,1,0,0,0,119,611,1,0,0,0,121,614,1,0,0,0,123,624,1,0,0,0,
  	125,630,1,0,0,0,127,637,1,0,0,0,129,645,1,0,0,0,131,647,1,0,0,0,133,656,
  	1,0,0,0,135,662,1,0,0,0,137,666,1,0,0,0,139,669,1,0,0,0,141,673,1,0,0,
  	0,143,679,1,0,0,0,145,681,1,0,0,0,147,683,1,0,0,0,149,691,1,0,0,0,151,
  	696,1,0,0,0,153,701,1,0,0,0,155,704,1,0,0,0,157,706,1,0,0,0,159,708,1,
  	0,0,0,161,710,1,0,0,0,163,714,1,0,0,0,165,717,1,0,0,0,167,720,1,0,0,0,
  	169,725,1,0,0,0,171,730,1,0,0,0,173,736,1,0,0,0,175,744,1,0,0,0,177,749,
  	1,0,0,0,179,755,1,0,0,0,181,761,1,0,0,0,183,768,1,0,0,0,185,773,1,0,0,
  	0,187,781,1,0,0,0,189,784,1,0,0,0,191,787,1,0,0,0,193,792,1,0,0,0,195,
  	799,1,0,0,0,197,804,1,0,0,0,199,811,1,0,0,0,201,817,1,0,0,0,203,821,1,
  	0,0,0,205,825,1,0,0,0,207,829,1,0,0,0,209,833,1,0,0,0,211,839,1,0,0,0,
  	213,845,1,0,0,0,215,849,1,0,0,0,217,854,1,0,0,0,219,858,1,0,0,0,221,862,
  	1,0,0,0,223,867,1,0,0,0,225,872,1,0,0,0,227,878,1,0,0,0,229,883,1,0,0,
  	0,231,889,1,0,0,0,233,891,1,0,0,0,235,893,1,0,0,0,237,895,1,0,0,0,239,
  	899,1,0,0,0,241,903,1,0,0,0,243,906,1,0,0,0,245,908,1,0,0,0,247,910,1,
  	0,0,0,249,913,1,0,0,0,251,916,1,0,0,0,253,920,1,0,0,0,255,923,1,0,0,0,
  	257,927,1,0,0,0,259,935,1,0,0,0,261,941,1,0,0,0,263,948,1,0,0,0,265,963,
  	1,0,0,0,267,966,1,0,0,0,269,970,1,0,0,0,271,973,1,0,0,0,273,977,1,0,0,
  	0,275,982,1,0,0,0,277,994,1,0,0,0,279,998,1,0,0,0,281,1001,1,0,0,0,283,
  	1008,1,0,0,0,285,1042,1,0,0,0,287,1046,1,0,0,0,289,1062,1,0,0,0,291,1071,
  	1,0,0,0,293,1079,1,0,0,0,295,1097,1,0,0,0,297,1110,1,0,0,0,299,1116,1,
  	0,0,0,301,302,5,105,0,0,302,303,5,110,0,0,303,304,5,99,0,0,304,305,5,
  	108,0,0,305,306,5,117,0,0,306,307,5,100,0,0,307,308,5,101,0,0,308,2,1,
  	0,0,0,309,310,5,59,0,0,310,4,1,0,0,0,311,312,5,112,0,0,312,313,5,97,0,
  	0,313,314,5,99,0,0,314,315,5,107,0,0,315,316,5,97,0,0,316,317,5,103,0,
  	0,317,318,5,101,0,0,318,6,1,0,0,0,319,320,5,98,0,0,320,321,5,111,0,0,
  	321,322,5,100,0,0,322,323,5,121,0,0,323,8,1,0,0,0,324,325,5,101,0,0,325,
  	326,5,110,0,0,326,327,5,100,0,0,327,10,1,0,0,0,328,329,5,117,0,0,329,
  	330,5,115,0,0,330,331,5,101,0,0,331,332,5,115,0,0,332,12,1,0,0,0,333,
  	334,5,44,0,0,334,14,1,0,0,0,335,336,5,61,0,0,336,16,1,0,0,0,337,338,5,
  	105,0,0,338,339,5,115,0,0,339,18,1,0,0,0,340,341,5,112,0,0,341,342,5,
  	114,0,0,342,343,5,111,0,0,343,344,5,118,0,0,344,345,5,105,0,0,345,346,
  	5,100,0,0,346,347,5,101,0,0,347,348,5,115,0,0,348,20,1,0,0,0,349,350,
  	5,109,0,0,350,351,5,111,0,0,351,352,5,100,0,0,352,353,5,101,0,0,353,354,
  	5,108,0,0,354,22,1,0,0,0,355,356,5,110,0,0,356,357,5,101,0,0,357,358,
  	5,101,0,0,358,359,5,100,0,0,359,360,5,115,0,0,360,24,1,0,0,0,361,362,
  	5,114,0,0,362,363,5,101,0,0,363,364,5,116,0,0,364,365,5,117,0,0,365,366,
  	5,114,0,0,366,367,5,110,0,0,367,368,5,115,0,0,368,26,1,0,0,0,369,370,
  	5,116,0,0,370,371,5,121,0,0,371,372,5,112,0,0,372,373,5,101,0,0,373,28,
  	1,0,0,0,374,375,5,101,0,0,375,376,5,110,0,0,376,377,5,117,0,0,377,378,
  	5,109,0,0,378,30,1,0,0,0,379,380,5,123,0,0,380,32,1,0,0,0,381,382,5,125,
  	0,0,382,34,1,0,0,0,383,384,5,105,0,0,384,385,5,110,0,0,385,386,5,116,
  	0,0,386,36,1,0,0,0,387,388,5,98,0,0,388,389,5,111,0,0,389,390,5,111,0,
  	0,390,391,5,108,0,0,391,38,1,0,0,0,392,393,5,99,0,0,393,394,5,104,0,0,
  	394,395,5,97,0,0,395,396,5,114,0,0,396,40,1,0,0,0,397,398,5,115,0,0,398,
  	399,5,104,0,0,399,400,5,111,0,0,400,401,5,114,0,0,401,402,5,116,0,0,402,
  	42,1,0,0,0,403,404,5,117,0,0,404,405,5,115,0,0,405,406,5,104,0,0,406,
  	407,5,111,0,0,407,408,5,114,0,0,408,409,5,116,0,0,409,44,1,0,0,0,410,
  	411,5,117,0,0,411,412,5,105,0,0,412,413,5,110,0,0,413,414,5,116,0,0,414,
  	46,1,0,0,0,415,416,5,102,0,0,416,417,5,108,0,0,417,418,5,111,0,0,418,
  	419,5,97,0,0,419,420,5,116,0,0,420,48,1,0,0,0,421,422,5,114,0,0,422,423,
  	5,101,0,0,423,424,5,97,0,0,424,425,5,108,0,0,425,50,1,0,0,0,426,427,5,
  	115,0,0,427,428,5,116,0,0,428,429,5,114,0,0,429,430,5,117,0,0,430,431,
  	5,99,0,0,431,432,5,116,0,0,432,52,1,0,0,0,433,434,5,94,0,0,434,54,1,0,
  	0,0,435,436,5,58,0,0,436,56,1,0,0,0,437,438,5,99,0,0,438,439,5,111,0,
  	0,439,440,5,110,0,0,440,441,5,115,0,0,441,442,5,116,0,0,442,58,1,0,0,
  	0,443,444,5,40,0,0,444,60,1,0,0,0,445,446,5,41,0,0,446,62,1,0,0,0,447,
  	448,5,91,0,0,448,64,1,0,0,0,449,450,5,93,0,0,450,66,1,0,0,0,451,452,5,
  	119,0,0,452,453,5,104,0,0,453,454,5,101,0,0,454,455,5,110,0,0,455,68,
  	1,0,0,0,456,457,5,110,0,0,457,458,5,111,0,0,458,459,5,116,0,0,459,70,
  	1,0,0,0,460,461,5,108,0,0,461,462,5,97,0,0,462,463,5,115,0,0,463,464,
  	5,116,0,0,464,72,1,0,0,0,465,466,5,102,0,0,466,467,5,117,0,0,467,468,
  	5,110,0,0,468,469,5,99,0,0,469,470,5,116,0,0,470,471,5,105,0,0,471,472,
  	5,111,0,0,472,473,5,110,0,0,473,74,1,0,0,0,474,475,5,110,0,0,475,476,
  	5,111,0,0,476,477,5,100,0,0,477,478,5,101,0,0,478,76,1,0,0,0,479,480,
  	5,108,0,0,480,481,5,101,0,0,481,482,5,116,0,0,482,78,1,0,0,0,483,484,
  	5,116,0,0,484,485,5,101,0,0,485,486,5,108,0,0,486,80,1,0,0,0,487,488,
  	5,40,0,0,488,489,5,42,0,0,489,490,5,64,0,0,490,491,5,99,0,0,491,492,5,
  	111,0,0,492,493,5,110,0,0,493,494,5,116,0,0,494,495,5,114,0,0,495,496,
  	5,97,0,0,496,497,5,99,0,0,497,498,5,116,0,0,498,82,1,0,0,0,499,500,5,
  	42,0,0,500,501,5,41,0,0,501,84,1,0,0,0,502,503,5,47,0,0,503,504,5,42,
  	0,0,504,505,5,64,0,0,505,506,5,99,0,0,506,507,5,111,0,0,507,508,5,110,
  	0,0,508,509,5,116,0,0,509,510,5,114,0,0,510,511,5,97,0,0,511,512,5,99,
  	0,0,512,513,5,116,0,0,513,86,1,0,0,0,514,515,5,42,0,0,515,516,5,47,0,
  	0,516,88,1,0,0,0,517,518,5,118,0,0,518,519,5,97,0,0,519,520,5,114,0,0,
  	520,90,1,0,0,0,521,522,5,102,0,0,522,523,5,105,0,0,523,92,1,0,0,0,524,
  	525,5,99,0,0,525,526,5,111,0,0,526,527,5,110,0,0,527,528,5,116,0,0,528,
  	529,5,114,0,0,529,530,5,97,0,0,530,531,5,99,0,0,531,532,5,116,0,0,532,
  	94,1,0,0,0,533,534,5,109,0,0,534,535,5,111,0,0,535,536,5,100,0,0,536,
  	537,5,101,0,0,537,96,1,0,0,0,538,539,5,114,0,0,539,540,5,101,0,0,540,
  	541,5,113,0,0,541,542,5,117,0,0,542,543,5,105,0,0,543,544,5,114,0,0,544,
  	545,5,101,0,0,545,98,1,0,0,0,546,547,5,101,0,0,547,548,5,110,0,0,548,
  	549,5,115,0,0,549,550,5,117,0,0,550,551,5,114,0,0,551,552,5,101,0,0,552,
  	100,1,0,0,0,553,554,5,97,0,0,554,555,5,115,0,0,555,556,5,115,0,0,556,
  	557,5,117,0,0,557,558,5,109,0,0,558,559,5,101,0,0,559,102,1,0,0,0,560,
  	561,5,103,0,0,561,562,5,117,0,0,562,563,5,97,0,0,563,564,5,114,0,0,564,
  	565,5,97,0,0,565,566,5,110,0,0,566,567,5,116,0,0,567,568,5,101,0,0,568,
  	569,5,101,0,0,569,104,1,0,0,0,570,571,5,105,0,0,571,572,5,109,0,0,572,
  	573,5,112,0,0,573,574,5,111,0,0,574,575,5,114,0,0,575,576,5,116,0,0,576,
  	106,1,0,0,0,577,578,5,105,0,0,578,579,5,102,0,0,579,108,1,0,0,0,580,581,
  	5,116,0,0,581,582,5,104,0,0,582,583,5,101,0,0,583,584,5,110,0,0,584,110,
  	1,0,0,0,585,586,5,101,0,0,586,587,5,108,0,0,587,588,5,115,0,0,588,589,
  	5,105,0,0,589,590,5,102,0,0,590,112,1,0,0,0,591,592,5,101,0,0,592,593,
  	5,108,0,0,593,594,5,115,0,0,594,595,5,101,0,0,595,114,1,0,0,0,596,597,
  	5,102,0,0,597,598,5,114,0,0,598,599,5,97,0,0,599,600,5,109,0,0,600,601,
  	5,101,0,0,601,116,1,0,0,0,602,603,5,105,0,0,603,604,5,109,0,0,604,605,
  	5,112,0,0,605,606,5,111,0,0,606,607,5,114,0,0,607,608,5,116,0,0,608,609,
  	5,101,0,0,609,610,5,100,0,0,610,118,1,0,0,0,611,612,5,46,0,0,612,613,
  	5,46,0,0,613,120,1,0,0,0,614,615,5,97,0,0,615,616,5,117,0,0,616,617,5,
  	116,0,0,617,618,5,111,0,0,618,619,5,109,0,0,619,620,5,97,0,0,620,621,
  	5,116,0,0,621,622,5,111,0,0,622,623,5,110,0,0,623,122,1,0,0,0,624,625,
  	5,115,0,0,625,626,5,116,0,0,626,627,5,97,0,0,627,628,5,116,0,0,628,629,
  	5,101,0,0,629,124,1,0,0,0,630,631,5,114,0,0,631,632,5,101,0,0,632,633,
  	5,115,0,0,633,634,5,117,0,0,634,635,5,109,0,0,635,636,5,101,0,0,636,126,
  	1,0,0,0,637,638,5,114,0,0,638,639,5,101,0,0,639,640,5,115,0,0,640,641,
  	5,116,0,0,641,642,5,97,0,0,642,643,5,114,0,0,643,644,5,116,0,0,644,128,
  	1,0,0,0,645,646,5,39,0,0,646,130,1,0,0,0,647,648,5,97,0,0,648,649,5,99,
  	0,0,649,650,5,116,0,0,650,651,5,105,0,0,651,652,5,118,0,0,652,653,5,97,
  	0,0,653,654,5,116,0,0,654,655,5,101,0,0,655,132,1,0,0,0,656,657,5,101,
  	0,0,657,658,5,118,0,0,658,659,5,101,0,0,659,660,5,114,0,0,660,661,5,121,
  	0,0,661,134,1,0,0,0,662,663,5,112,0,0,663,664,5,114,0,0,664,665,5,101,
  	0,0,665,136,1,0,0,0,666,667,5,45,0,0,667,668,5,62,0,0,668,138,1,0,0,0,
  	669,670,5,102,0,0,670,671,5,98,0,0,671,672,5,121,0,0,672,140,1,0,0,0,
  	673,674,5,109,0,0,674,675,5,101,0,0,675,676,5,114,0,0,676,677,5,103,0,
  	0,677,678,5,101,0,0,678,142,1,0,0,0,679,680,5,35,0,0,680,144,1,0,0,0,
  	681,682,5,46,0,0,682,146,1,0,0,0,683,684,5,100,0,0,684,685,5,101,0,0,
  	685,686,5,102,0,0,686,687,5,97,0,0,687,688,5,117,0,0,688,689,5,108,0,
  	0,689,690,5,116,0,0,690,148,1,0,0,0,691,692,5,119,0,0,692,693,5,105,0,
  	0,693,694,5,116,0,0,694,695,5,104,0,0,695,150,1,0,0,0,696,697,5,99,0,
  	0,697,698,5,97,0,0,698,699,5,115,0,0,699,700,5,101,0,0,700,152,1,0,0,
  	0,701,702,5,111,0,0,702,703,5,102,0,0,703,154,1,0,0,0,704,705,5,124,0,
  	0,705,156,1,0,0,0,706,707,5,45,0,0,707,158,1,0,0,0,708,709,5,95,0,0,709,
  	160,1,0,0,0,710,711,5,109,0,0,711,712,5,97,0,0,712,713,5,112,0,0,713,
  	162,1,0,0,0,714,715,5,60,0,0,715,716,5,60,0,0,716,164,1,0,0,0,717,718,
  	5,62,0,0,718,719,5,62,0,0,719,166,1,0,0,0,720,721,5,102,0,0,721,722,5,
  	111,0,0,722,723,5,108,0,0,723,724,5,100,0,0,724,168,1,0,0,0,725,726,5,
  	109,0,0,726,727,5,97,0,0,727,728,5,112,0,0,728,729,5,105,0,0,729,170,
  	1,0,0,0,730,731,5,102,0,0,731,732,5,111,0,0,732,733,5,108,0,0,733,734,
  	5,100,0,0,734,735,5,105,0,0,735,172,1,0,0,0,736,737,5,109,0,0,737,738,
  	5,97,0,0,738,739,5,112,0,0,739,740,5,102,0,0,740,741,5,111,0,0,741,742,
  	5,108,0,0,742,743,5,100,0,0,743,174,1,0,0,0,744,745,5,109,0,0,745,746,
  	5,97,0,0,746,747,5,112,0,0,747,748,5,119,0,0,748,176,1,0,0,0,749,750,
  	5,109,0,0,750,751,5,97,0,0,751,752,5,112,0,0,752,753,5,119,0,0,753,754,
  	5,105,0,0,754,178,1,0,0,0,755,756,5,102,0,0,756,757,5,111,0,0,757,758,
  	5,108,0,0,758,759,5,100,0,0,759,760,5,119,0,0,760,180,1,0,0,0,761,762,
  	5,102,0,0,762,763,5,111,0,0,763,764,5,108,0,0,764,765,5,100,0,0,765,766,
  	5,119,0,0,766,767,5,105,0,0,767,182,1,0,0,0,768,769,5,109,0,0,769,770,
  	5,97,0,0,770,771,5,107,0,0,771,772,5,101,0,0,772,184,1,0,0,0,773,774,
  	5,102,0,0,774,775,5,108,0,0,775,776,5,97,0,0,776,777,5,116,0,0,777,778,
  	5,116,0,0,778,779,5,101,0,0,779,780,5,110,0,0,780,186,1,0,0,0,781,782,
  	5,43,0,0,782,783,5,36,0,0,783,188,1,0,0,0,784,785,5,45,0,0,785,786,5,
  	36,0,0,786,190,1,0,0,0,787,788,5,110,0,0,788,789,5,111,0,0,789,790,5,
  	116,0,0,790,791,5,36,0,0,791,192,1,0,0,0,792,793,5,115,0,0,793,794,5,
  	104,0,0,794,795,5,111,0,0,795,796,5,114,0,0,796,797,5,116,0,0,797,798,
  	5,36,0,0,798,194,1,0,0,0,799,800,5,105,0,0,800,801,5,110,0,0,801,802,
  	5,116,0,0,802,803,5,36,0,0,803,196,1,0,0,0,804,805,5,102,0,0,805,806,
  	5,108,0,0,806,807,5,111,0,0,807,808,5,97,0,0,808,809,5,116,0,0,809,810,
  	5,36,0,0,810,198,1,0,0,0,811,812,5,114,0,0,812,813,5,101,0,0,813,814,
  	5,97,0,0,814,815,5,108,0,0,815,816,5,36,0,0,816,200,1,0,0,0,817,818,5,
  	36,0,0,818,819,5,43,0,0,819,820,5,36,0,0,820,202,1,0,0,0,821,822,5,36,
  	0,0,822,823,5,45,0,0,823,824,5,36,0,0,824,204,1,0,0,0,825,826,5,36,0,
  	0,826,827,5,42,0,0,827,828,5,36,0,0,828,206,1,0,0,0,829,830,5,36,0,0,
  	830,831,5,47,0,0,831,832,5,36,0,0,832,208,1,0,0,0,833,834,5,36,0,0,834,
  	835,5,109,0,0,835,836,5,111,0,0,836,837,5,100,0,0,837,838,5,36,0,0,838,
  	210,1,0,0,0,839,840,5,36,0,0,840,841,5,100,0,0,841,842,5,105,0,0,842,
  	843,5,118,0,0,843,844,5,36,0,0,844,212,1,0,0,0,845,846,5,36,0,0,846,847,
  	5,61,0,0,847,848,5,36,0,0,848,214,1,0,0,0,849,850,5,36,0,0,850,851,5,
  	60,0,0,851,852,5,62,0,0,852,853,5,36,0,0,853,216,1,0,0,0,854,855,5,36,
  	0,0,855,856,5,60,0,0,856,857,5,36,0,0,857,218,1,0,0,0,858,859,5,36,0,
  	0,859,860,5,62,0,0,860,861,5,36,0,0,861,220,1,0,0,0,862,863,5,36,0,0,
  	863,864,5,60,0,0,864,865,5,61,0,0,865,866,5,36,0,0,866,222,1,0,0,0,867,
  	868,5,36,0,0,868,869,5,62,0,0,869,870,5,61,0,0,870,871,5,36,0,0,871,224,
  	1,0,0,0,872,873,5,36,0,0,873,874,5,97,0,0,874,875,5,110,0,0,875,876,5,
  	100,0,0,876,877,5,36,0,0,877,226,1,0,0,0,878,879,5,36,0,0,879,880,5,111,
  	0,0,880,881,5,114,0,0,881,882,5,36,0,0,882,228,1,0,0,0,883,884,5,36,0,
  	0,884,885,5,120,0,0,885,886,5,111,0,0,886,887,5,114,0,0,887,888,5,36,
  	0,0,888,230,1,0,0,0,889,890,5,43,0,0,890,232,1,0,0,0,891,892,5,42,0,0,
  	892,234,1,0,0,0,893,894,5,47,0,0,894,236,1,0,0,0,895,896,5,109,0,0,896,
  	897,5,111,0,0,897,898,5,100,0,0,898,238,1,0,0,0,899,900,5,100,0,0,900,
  	901,5,105,0,0,901,902,5,118,0,0,902,240,1,0,0,0,903,904,5,60,0,0,904,
  	905,5,62,0,0,905,242,1,0,0,0,906,907,5,60,0,0,907,244,1,0,0,0,908,909,
  	5,62,0,0,909,246,1,0,0,0,910,911,5,60,0,0,911,912,5,61,0,0,912,248,1,
  	0,0,0,913,914,5,62,0,0,914,915,5,61,0,0,915,250,1,0,0,0,916,917,5,97,
  	0,0,917,918,5,110,0,0,918,919,5,100,0,0,919,252,1,0,0,0,920,921,5,111,
  	0,0,921,922,5,114,0,0,922,254,1,0,0,0,923,924,5,120,0,0,924,925,5,111,
  	0,0,925,926,5,114,0,0,926,256,1,0,0,0,927,928,5,105,0,0,928,929,5,110,
  	0,0,929,930,5,105,0,0,930,931,5,116,0,0,931,932,5,105,0,0,932,933,5,97,
  	0,0,933,934,5,108,0,0,934,258,1,0,0,0,935,936,5,102,0,0,936,937,5,105,
  	0,0,937,938,5,110,0,0,938,939,5,97,0,0,939,940,5,108,0,0,940,260,1,0,
  	0,0,941,942,5,117,0,0,942,943,5,110,0,0,943,944,5,108,0,0,944,945,5,101,
  	0,0,945,946,5,115,0,0,946,947,5,115,0,0,947,262,1,0,0,0,948,949,5,117,
  	0,0,949,950,5,110,0,0,950,951,5,116,0,0,951,952,5,105,0,0,952,953,5,108,
  	0,0,953,264,1,0,0,0,954,955,5,116,0,0,955,956,5,114,0,0,956,957,5,117,
  	0,0,957,964,5,101,0,0,958,959,5,102,0,0,959,960,5,97,0,0,960,961,5,108,
  	0,0,961,962,5,115,0,0,962,964,5,101,0,0,963,954,1,0,0,0,963,958,1,0,0,
  	0,964,266,1,0,0,0,965,967,7,0,0,0,966,965,1,0,0,0,967,968,1,0,0,0,968,
  	966,1,0,0,0,968,969,1,0,0,0,969,268,1,0,0,0,970,971,3,267,133,0,971,972,
  	5,117,0,0,972,270,1,0,0,0,973,974,3,267,133,0,974,975,5,46,0,0,975,976,
  	3,267,133,0,976,272,1,0,0,0,977,978,5,39,0,0,978,979,9,0,0,0,979,980,
  	5,39,0,0,980,274,1,0,0,0,981,983,7,0,0,0,982,981,1,0,0,0,983,984,1,0,
  	0,0,984,982,1,0,0,0,984,985,1,0,0,0,985,986,1,0,0,0,986,988,5,46,0,0,
  	987,989,7,0,0,0,988,987,1,0,0,0,989,990,1,0,0,0,990,988,1,0,0,0,990,991,
  	1,0,0,0,991,992,1,0,0,0,992,993,5,102,0,0,993,276,1,0,0,0,994,995,3,267,
  	133,0,995,996,5,117,0,0,996,997,5,115,0,0,997,278,1,0,0,0,998,999,3,267,
  	133,0,999,1000,5,115,0,0,1000,280,1,0,0,0,1001,1005,7,1,0,0,1002,1004,
  	7,2,0,0,1003,1002,1,0,0,0,1004,1007,1,0,0,0,1005,1003,1,0,0,0,1005,1006,
  	1,0,0,0,1006,282,1,0,0,0,1007,1005,1,0,0,0,1008,1009,5,45,0,0,1009,1010,
  	5,45,0,0,1010,1014,1,0,0,0,1011,1013,8,3,0,0,1012,1011,1,0,0,0,1013,1016,
  	1,0,0,0,1014,1012,1,0,0,0,1014,1015,1,0,0,0,1015,1017,1,0,0,0,1016,1014,
  	1,0,0,0,1017,1018,6,141,0,0,1018,284,1,0,0,0,1019,1020,5,47,0,0,1020,
  	1021,5,42,0,0,1021,1022,1,0,0,0,1022,1026,8,4,0,0,1023,1025,9,0,0,0,1024,
  	1023,1,0,0,0,1025,1028,1,0,0,0,1026,1027,1,0,0,0,1026,1024,1,0,0,0,1027,
  	1029,1,0,0,0,1028,1026,1,0,0,0,1029,1030,5,42,0,0,1030,1043,5,47,0,0,
  	1031,1032,5,40,0,0,1032,1033,5,42,0,0,1033,1037,8,4,0,0,1034,1036,9,0,
  	0,0,1035,1034,1,0,0,0,1036,1039,1,0,0,0,1037,1038,1,0,0,0,1037,1035,1,
  	0,0,0,1038,1040,1,0,0,0,1039,1037,1,0,0,0,1040,1041,5,42,0,0,1041,1043,
  	5,41,0,0,1042,1019,1,0,0,0,1042,1031,1,0,0,0,1043,1044,1,0,0,0,1044,1045,
  	6,142,0,0,1045,286,1,0,0,0,1046,1050,5,37,0,0,1047,1049,9,0,0,0,1048,
  	1047,1,0,0,0,1049,1052,1,0,0,0,1050,1051,1,0,0,0,1050,1048,1,0,0,0,1051,
  	1058,1,0,0,0,1052,1050,1,0,0,0,1053,1055,5,13,0,0,1054,1053,1,0,0,0,1054,
  	1055,1,0,0,0,1055,1056,1,0,0,0,1056,1059,5,10,0,0,1057,1059,5,0,0,1,1058,
  	1054,1,0,0,0,1058,1057,1,0,0,0,1059,1060,1,0,0,0,1060,1061,6,143,0,0,
  	1061,288,1,0,0,0,1062,1066,5,34,0,0,1063,1065,8,5,0,0,1064,1063,1,0,0,
  	0,1065,1068,1,0,0,0,1066,1064,1,0,0,0,1066,1067,1,0,0,0,1067,1069,1,0,
  	0,0,1068,1066,1,0,0,0,1069,1070,5,34,0,0,1070,290,1,0,0,0,1071,1072,5,
  	45,0,0,1072,1073,5,45,0,0,1073,1074,5,37,0,0,1074,1075,5,77,0,0,1075,
  	1076,5,65,0,0,1076,1077,5,73,0,0,1077,1078,5,78,0,0,1078,292,1,0,0,0,
  	1079,1080,5,45,0,0,1080,1081,5,45,0,0,1081,1082,5,37,0,0,1082,1083,5,
  	80,0,0,1083,1084,5,82,0,0,1084,1085,5,79,0,0,1085,1086,5,80,0,0,1086,
  	1087,5,69,0,0,1087,1088,5,82,0,0,1088,1089,5,84,0,0,1089,1090,5,89,0,
  	0,1090,1094,1,0,0,0,1091,1093,8,6,0,0,1092,1091,1,0,0,0,1093,1096,1,0,
  	0,0,1094,1092,1,0,0,0,1094,1095,1,0,0,0,1095,294,1,0,0,0,1096,1094,1,
  	0,0,0,1097,1098,5,99,0,0,1098,1099,5,104,0,0,1099,1100,5,101,0,0,1100,
  	1101,5,99,0,0,1101,1102,5,107,0,0,1102,1106,1,0,0,0,1103,1105,8,6,0,0,
  	1104,1103,1,0,0,0,1105,1108,1,0,0,0,1106,1104,1,0,0,0,1106,1107,1,0,0,
  	0,1107,296,1,0,0,0,1108,1106,1,0,0,0,1109,1111,7,7,0,0,1110,1109,1,0,
  	0,0,1111,1112,1,0,0,0,1112,1110,1,0,0,0,1112,1113,1,0,0,0,1113,1114,1,
  	0,0,0,1114,1115,6,148,0,0,1115,298,1,0,0,0,1116,1117,9,0,0,0,1117,300,
  	1,0,0,0,17,0,963,968,984,990,1005,1014,1026,1037,1042,1050,1054,1058,
  	1066,1094,1106,1112,1,6,0,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  lustrelexerLexerStaticData = staticData.release();
}

}

LustreLexer::LustreLexer(CharStream *input) : Lexer(input) {
  LustreLexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *lustrelexerLexerStaticData->atn, lustrelexerLexerStaticData->decisionToDFA, lustrelexerLexerStaticData->sharedContextCache);
}

LustreLexer::~LustreLexer() {
  delete _interpreter;
}

std::string LustreLexer::getGrammarFileName() const {
  return "Lustre.g4";
}

const std::vector<std::string>& LustreLexer::getRuleNames() const {
  return lustrelexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& LustreLexer::getChannelNames() const {
  return lustrelexerLexerStaticData->channelNames;
}

const std::vector<std::string>& LustreLexer::getModeNames() const {
  return lustrelexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& LustreLexer::getVocabulary() const {
  return lustrelexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView LustreLexer::getSerializedATN() const {
  return lustrelexerLexerStaticData->serializedATN;
}

const atn::ATN& LustreLexer::getATN() const {
  return *lustrelexerLexerStaticData->atn;
}




void LustreLexer::initialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  lustrelexerLexerInitialize();
#else
  ::antlr4::internal::call_once(lustrelexerLexerOnceFlag, lustrelexerLexerInitialize);
#endif
}
